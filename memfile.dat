// 1110 00 1 1000 0 0011 0001 0000 0000 0010
// VADD V1, V3, #0x2
E3031002

// 1110 00 1 1000 0 0000 0000 0000 0000 0011
// VADD V0, V0, #0x3
E3000003

// 1110 00 1 1000 0 0000 0000 0000 0000 0101
// VADD V0, V0, #0x5
E3000005

// 1110 00 0 1000 0 0000 0000 0000 0000 0001
// VADD V0, V0, V1
E1000001

// 1110 00 0 1010 0 0000 0000 0000 0000 0001
// VSUB V0, V0, V1
E1400001

// 1110 00 0 0101 0 1111 0000 0000 0000 1111
// SUB R0, R15, R15
// R0 = 0
E0AF000F

// 1110 00 1 0100 0 0000 0010 0000 0000 0101
// ADD R2, R0, #5
// R2 = 5
E2802005

// 1110 00 1 0100 0 0000 0011 0000 0000 1100
// ADD R3, R0, #12
// R3 = 12
E280300C

// 1110 00 0 0011 0 0011 0000 0000 0000 0011
// XOR R0, R3, R3
// R0 = 0
E0630003

// 1110 00 1 1110 0 0000 1011 1100 0000 1010
// MOV R11, #0xC0A00000 -> -5.0 en IEEE 754
E3C0BC0A

// 1110 00 1 1110 0 0000 1100 0100 0001 0010
// MOV R12, #0x41200000 -> +10.0 en IEEE 754
E3C0C412

// 1110 00 0 0111 0 1011 0000 0000 0000 1100
// ADDFP R0, R11, R12
E0EB000C

// 1110 00 0 0110 0 1011 1011 0001 0000 1100
// FMUL R1, R11, R12
E0EB610C

// 1110 00 1 1101 0 0001 0000 1100 0000 1010
// MOVIDX V1[0], #-5.0
E3A10C0A

// 1110 00 1 1101 0 0001 0001 1100 0000 1010
// MOVIDX V1[1], #-5.0
E3A11C0A

// 1110 00 1 1101 0 0001 0010 1100 0000 1010
// MOVIDX V1[2], #-5.0
E3A12C0A

// 1110 00 1 1101 0 0001 0011 1100 0000 1010
// MOVIDX V1[3], #-5.0
E3A13C0A

// 1110 00 1 1101 0 0001 0100 1100 0000 1010
// MOVIDX V1[4], #-5.0
E3A14C0A


// 1110 00 1 1101 0 0010 0000 0100 0001 0010
// MOVIDX V2[0], #10.0
E3A20412

// 1110 00 1 1101 0 0010 0001 0100 0001 0010
// MOVIDX V2[1], #10.0
E3A21412

// 1110 00 1 1101 0 0010 0010 0100 0001 0010
// MOVIDX V2[2], #10.0
E3A22412

// 1110 00 1 1101 0 0010 0011 0100 0001 0010
// MOVIDX V2[3], #10.0
E3A23412

// 1110 00 1 1101 0 0010 0100 0100 0001 0010
// MOVIDX V2[4], #10.0
E3A24412


// 1110 00 0 1100 0 0001 0000 0000 0000 0010
// VADDFP V0, V1, V2
E1810002
